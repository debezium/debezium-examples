services:
  kafka:
    image: quay.io/debezium/kafka:${DEBEZIUM_VERSION}
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      - CLUSTER_ID=oh-sxaDRTcyAr6pFRbXyzA
      - NODE_ID=1
      - NODE_ROLE=combined
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_LISTENERS=PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092

  mongodb:
    image: &mongodb-image quay.io/debezium/example-mongodb:${DEBEZIUM_VERSION}
    hostname: &mongodb-hostname mongodb
    ports:
      - 27017:27017
    environment:
      MONGODB_USER: debezium
      MONGODB_PASSWORD: dbz
    healthcheck:
      test: bash -c 'mongosh --quiet --eval "db.adminCommand(\"ping\").ok" localhost:27017 | grep 1'
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  mongodb-init:
    image: *mongodb-image
    environment:
      HOSTNAME: *mongodb-hostname
    entrypoint: /bin/bash
    command: "/usr/local/bin/init-inventory.sh"
    depends_on:
      mongodb:
        condition: service_healthy

  postgres:
    image: quay.io/debezium/postgres:11
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgresuser
      - POSTGRES_PASSWORD=postgrespw
      - POSTGRES_DB=inventorydb

  connect:
    image: debezium/connect-jdbc:${DEBEZIUM_VERSION}
    build:
      context: debezium-jdbc
      args:
        DEBEZIUM_VERSION: ${DEBEZIUM_VERSION}
    ports:
      - 8083:8083
    depends_on:
      - kafka
      - mongodb
      - postgres
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_source_connect_statuses

quarkus.http.port=8081

kafka.bootstrap.servers=localhost:9092
mp.messaging.incoming.orders.connector=smallrye-kafka
mp.messaging.incoming.orders.topic=dbserver1.inventory.purchaseorder
mp.messaging.incoming.orders.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.incoming.orders.group.id=cache-update-service
mp.messaging.incoming.orders.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.orders.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming.orderlines.connector=smallrye-kafka
mp.messaging.incoming.orderlines.topic=dbserver1.inventory.orderline
mp.messaging.incoming.orderlines.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.incoming.orderlines.group.id=cache-update-service
mp.messaging.incoming.orderlines.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.orderlines.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

mp.messaging.incoming.orderwithlines.connector=smallrye-kafka
mp.messaging.incoming.orderwithlines.topic=orders-with-lines
mp.messaging.incoming.orderwithlines.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.incoming.orderwithlines.group.id=cache-update-service
mp.messaging.incoming.orderwithlines.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.orderwithlines.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

orders.topic=dbserver1.inventory.purchaseorder
order.lines.topic=dbserver1.inventory.orderline
orders.with.lines.topic=orders-with-lines

quarkus.kafka-streams.bootstrap-servers=${kafka.bootstrap.servers}
quarkus.kafka-streams.application-id=order-joiner1
quarkus.kafka-streams.application-server=${hostname}:8080
quarkus.kafka-streams.topics=${orders.topic},${order.lines.topic}

# streams options
kafka-streams.cache.max.bytes.buffering=10240
kafka-streams.commit.interval.ms=1000
kafka-streams.metadata.max.age.ms=500
# kafka-streams.auto.offset.reset=earliest
kafka-streams.auto.offset.reset=latest
kafka-streams.metrics.recording.level=DEBUG
# kafka-streams.consumer.session.timeout.ms=150
# kafka-streams.consumer.heartbeat.interval.ms=100

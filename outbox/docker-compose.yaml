version: '2.1'
services:
  zookeeper:
    image: debezium/zookeeper:${DEBEZIUM_VERSION}
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
  kafka:
    image: debezium/kafka:${DEBEZIUM_VERSION}
    ports:
     - 9092:9092
    links:
     - zookeeper
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181
     # For local debugging of Main
     # - ADVERTISED_HOST_NAME=192.168.1.3
  order-db:
    image: debezium/example-postgres:${DEBEZIUM_VERSION}
    ports:
     - 5433:5432
    healthcheck:
      test: "pg_isready -U postgresuser -d orderdb"
      interval: 2s
      timeout: 20s
      retries: 10
    environment:
     - POSTGRES_USER=postgresuser
     - POSTGRES_PASSWORD=postgrespw
     - POSTGRES_DB=orderdb
     - PGPASSWORD=postgrespw
  shipment-db:
    image: debezium/example-postgres:${DEBEZIUM_VERSION}
    ports:
      - 5434:5432
    healthcheck:
      test: "pg_isready -U postgresuser -d shipmentdb"
      interval: 2s
      timeout: 20s
      retries: 10
    environment:
      - POSTGRES_USER=postgresuser
      - POSTGRES_PASSWORD=postgrespw
      - POSTGRES_DB=shipmentdb
      - PGPASSWORD=postgrespw
  connect:
    image: debezium/connect:${DEBEZIUM_VERSION}
    ports:
     - 8083:8083
     - 5005:5005
    links:
     - kafka
     - order-db
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_source_connect_configs
     - OFFSET_STORAGE_TOPIC=my_source_connect_offsets
     - STATUS_STORAGE_TOPIC=my_source_connect_statuses
     - CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE=false
     - CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false
     - KAFKA_DEBUG=true
     - DEBUG_SUSPEND_FLAG=n
  order-service:
    image: debezium-examples/outbox-order-service:${DEBEZIUM_VERSION}
    build:
      context: order-service
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_BUILD:-jvm}
    ports:
     - 8080:8080
    links:
     - kafka
     - order-db
    depends_on:
      order-db:
        condition: service_healthy
      connect:
        condition: service_started
    command: "./application -Dquarkus.datasource.url=jdbc:postgresql://order-db:5432/orderdb?currentSchema=inventory -Dquarkus.datasource.username=postgresuser -Dquarkus.datasource.password=postgrespw"
  shipment-service:
    image: debezium-examples/outbox-shipment-service:${DEBEZIUM_VERSION}
    build:
      context: shipment-service
      dockerfile: src/main/docker/Dockerfile.${QUARKUS_BUILD:-jvm}
    links:
     - kafka
     - shipment-db
    depends_on:
      shipment-db:
        condition: service_healthy
      connect:
        condition: service_started
